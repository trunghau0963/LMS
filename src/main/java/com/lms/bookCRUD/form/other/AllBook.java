package com.lms.bookCRUD.form.other;

import java.awt.Color;
import java.awt.Font;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.lms.bookCRUD.model.BookModel;
import com.lms.bookCRUD.service.BookService;
import com.lms.bookCRUD.ui.CenterTableCellRenderer;
import com.lms.bookCRUD.ui.EditToggleEditor;
import com.lms.bookCRUD.ui.EditToggleRenderer;
import com.lms.bookCRUD.ui.ToggleEditor;
import com.lms.bookCRUD.ui.ToggleRenderer;

public class AllBook extends javax.swing.JPanel {

    private BookService bookService;

    public AllBook(BookService bookService) {
        this.bookService = bookService;
        initComponents();
        init();
    }

    private void init() {
        searchField.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Search...");
        searchBookButton.setIcon(new FlatSVGIcon("svg/search.svg"));
        filterBookButton.setIcon(new FlatSVGIcon("svg/filter.svg"));

        List<BookModel> bookModels = bookService.getAllBooks();
        DefaultTableModel tblModel = (DefaultTableModel) bookList.getModel();
        reloadTable(tblModel, bookModels);

        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(bookList.getModel());
        bookList.setRowSorter(sorter);

    }

    public void reloadTable(DefaultTableModel tblModel, List<BookModel> bookModels) {
        CenterTableCellRenderer centerRenderer = new CenterTableCellRenderer();
        int idx = 0;
        customTable(bookList);
        tblModel.setRowCount(0);
        tblModel.addColumn("No.");
        tblModel.addColumn("ID");
        tblModel.addColumn("Title");
        tblModel.addColumn("Edition");
        tblModel.addColumn("Categories");
        tblModel.addColumn("Authors");
        tblModel.addColumn("Publisher");
        tblModel.addColumn("Sale Price");
        tblModel.addColumn("Quantity");
        tblModel.addColumn("Is Hide");
        tblModel.addColumn("Edit");
        for (BookModel bookModel : bookModels) {
            tblModel.addRow(new Object[] { ++idx, bookModel.getId(), bookModel.getTitle(), bookModel.getEdition(),
                    bookModel.getCategoriesString(),
                    bookModel.getAuthorsString(), bookModel.getPublisher().toString(),
                    bookModel.getSalePrice(), bookModel.getQuantity(),
                    bookModel.getIsHide(), "Edit" });
        }

        for (int columnIndex = 0; columnIndex < bookList.getColumnCount(); columnIndex++) {
            bookList.getColumnModel().getColumn(columnIndex).setCellRenderer(centerRenderer);
        }

        bookList.setModel(tblModel);
        bookList.getColumnModel().getColumn(8).setCellRenderer(new ToggleRenderer());
        bookList.getColumnModel().getColumn(8).setCellEditor(new ToggleEditor());
        bookList.getColumnModel().getColumn(9).setCellRenderer(new EditToggleRenderer());
        bookList.getColumnModel().getColumn(9).setCellEditor(new EditToggleEditor());

        bookList.setColumnSelectionAllowed(true);
    }

    private void customTable(javax.swing.JTable table) {
        table.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 12));
        table.getTableHeader().setBackground(new Color(125, 200, 204));
        table.getTableHeader().setForeground(new Color(0, 0, 0));
        table.setRowHeight(30);
        table.setShowGrid(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel12 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        filterBookButton = new javax.swing.JButton();
        filterSearch = new javax.swing.JComboBox<>();
        jPanel15 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        searchBookButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        bookList = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 60, 10, 60));
        setLayout(new java.awt.BorderLayout());

        jPanel12.setPreferredSize(new java.awt.Dimension(800, 100));
        jPanel12.setLayout(new javax.swing.BoxLayout(jPanel12, javax.swing.BoxLayout.Y_AXIS));

        jPanel10.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("All Books");
        jPanel10.add(jLabel2, java.awt.BorderLayout.CENTER);

        jPanel12.add(jPanel10);

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 40));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel14.setPreferredSize(new java.awt.Dimension(150, 40));

        jSplitPane1.setPreferredSize(new java.awt.Dimension(150, 40));

        filterBookButton.setPreferredSize(new java.awt.Dimension(40, 40));
        filterBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterBookButtonActionPerformed(evt);
            }
        });
        jSplitPane1.setLeftComponent(filterBookButton);

        filterSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        filterSearch.setPreferredSize(new java.awt.Dimension(100, 40));
        filterSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterSearchActionPerformed(evt);
            }
        });
        jSplitPane1.setRightComponent(filterSearch);

        jPanel14.add(jSplitPane1);

        jPanel1.add(jPanel14, java.awt.BorderLayout.WEST);

        jPanel15.setPreferredSize(new java.awt.Dimension(700, 40));

        searchField.setPreferredSize(new java.awt.Dimension(71, 40));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchField, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addGap(8, 8, 8))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel15, java.awt.BorderLayout.CENTER);

        jPanel16.setPreferredSize(new java.awt.Dimension(60, 40));
        jPanel16.setRequestFocusEnabled(false);

        searchBookButton.setPreferredSize(new java.awt.Dimension(60, 40));
        searchBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBookButtonActionPerformed(evt);
            }
        });
        jPanel16.add(searchBookButton);

        jPanel1.add(jPanel16, java.awt.BorderLayout.EAST);

        jPanel12.add(jPanel1);

        add(jPanel12, java.awt.BorderLayout.NORTH);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 40, 1));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 400));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 5));

        bookList.setRowHeight(30);
        bookList.setShowGrid(true);
        jScrollPane2.setViewportView(bookList);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void filterBookButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_filterBookButtonActionPerformed
        int w = 250, h = 300;
        // if(filterArea.getPreferredSize().width < w){
        //     System.out.println(filterArea.getPreferredSize().width);
        //     openFilterMenu(w, h);
        // } else {
        //     System.out.println(filterArea.getPreferredSize().width);
        //     closeFilterMenu(w, h);
        // }
    }// GEN-LAST:event_filterBookButtonActionPerformed

    // private void openFilterMenu(int w, int h){
    //     new Thread(new Runnable() {
    //         @Override
    //         public void run() {
    //             for (int i = 0; i <= w; i += 10) {
    //                 filterArea.setPreferredSize(new java.awt.Dimension(w, h));
    //                 filterArea.revalidate();
    //                 filterArea.repaint();
    //                 try {
    //                     Thread.sleep(1);
    //                 } catch (InterruptedException ex) {
    //                     ex.printStackTrace();
    //                 }
    //             }
    //         }
    //     }).start();
    // }

    // private void closeFilterMenu(int w, int h){
    //     new Thread(new Runnable(){
    //         @Override
    //         public void run(){
    //             for (int i = w; i >= 0; i -= 10){
    //                 filterArea.setPreferredSize(new java.awt.Dimension(0, h));
    //                 filterArea.revalidate();
    //                 filterArea.repaint();
    //                 try {
    //                     Thread.sleep(1);
    //                 } catch (InterruptedException ex) {
    //                     ex.printStackTrace();
    //                 }
    //             }
    //         }
    //     }).start();
    // }

    private void filterSearchActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_filterSearchActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_filterSearchActionPerformed

    private void searchBookButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchBookButtonActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_searchBookButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookList;
    private javax.swing.JButton filterBookButton;
    private javax.swing.JComboBox<String> filterSearch;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JButton searchBookButton;
    private javax.swing.JTextField searchField;
    // End of variables declaration//GEN-END:variables
}
