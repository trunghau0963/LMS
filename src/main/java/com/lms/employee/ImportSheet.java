/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.lms.employee;

import java.io.IOException;

import java.io.File;
import java.io.FileInputStream;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DungMinh
 */
public class ImportSheet extends javax.swing.JPanel {

    /**
     * Creates new form ImportSheet
     */
    public ImportSheet() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        saveButton2 = new javax.swing.JButton();
        saveButton4 = new javax.swing.JButton();
        saveButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        saveButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        saveButton.setBackground(new java.awt.Color(255, 153, 0));
        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Import Date");

        saveButton2.setBackground(new java.awt.Color(102, 0, 0));
        saveButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveButton2.setForeground(new java.awt.Color(255, 255, 255));
        saveButton2.setText("View list import");
        saveButton2.setToolTipText("");
        saveButton2.setBorder(null);
        saveButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton2ActionPerformed(evt);
            }
        });

        saveButton4.setForeground(new java.awt.Color(153, 153, 153));
        saveButton4.setText("Import list book");
        saveButton4.setToolTipText("");
        saveButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        saveButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton4ActionPerformed(evt);
            }
        });

        saveButton3.setBackground(new java.awt.Color(153, 153, 153));
        saveButton3.setForeground(new java.awt.Color(255, 255, 255));
        saveButton3.setText("Add new book");
        saveButton3.setToolTipText("");
        saveButton3.setBorder(null);
        saveButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] { { null, null, null, null }, { null, null, null, null }, { null, null, null, null },
                { null, null, null, null } },
                new String[] { "Book ID", "Quantity", "Import Price", "Total Price" }));
        jScrollPane1.setViewportView(jTable1);
        

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel2Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(saveButton2, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(saveButton3,
                                                                javax.swing.GroupLayout.Alignment.TRAILING,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 202,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jDateChooser1,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 202,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(37, 37, 37)
                                                .addComponent(saveButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 224,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane1))
                                .addContainerGap(56, Short.MAX_VALUE)));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jLabel3)
                                .addGap(5, 5, 5)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(saveButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 29,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(saveButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 29,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(saveButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(32, Short.MAX_VALUE)));

        saveButton1.setForeground(new java.awt.Color(255, 153, 0));
        saveButton1.setText("Import");
        saveButton1.setToolTipText("");
        saveButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 51)));
        saveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    saveButton1ActionPerformed(evt);
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setText("Import Sheet");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(39, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel2))
                                                .addGroup(layout.createSequentialGroup()
                                                        .addComponent(saveButton1,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 108,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addContainerGap(437, Short.MAX_VALUE))));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(28, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(saveButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(414, Short.MAX_VALUE))));
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_saveButtonActionPerformed

    private void saveButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveButton2ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_saveButton2ActionPerformed

    private void saveButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveButton4ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_saveButton4ActionPerformed

    private void saveButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveButton3ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_saveButton3ActionPerformed

    @SuppressWarnings("deprecation")
    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) throws IOException {
        // Disable the jTable1
        jTable1.setVisible(true);

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setDialogTitle("Select Excel File");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Excel Files", "xls", "xlsx"));

        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try (FileInputStream fis = new FileInputStream(selectedFile)) {
                XSSFWorkbook wb = new XSSFWorkbook(fis);
                XSSFSheet sheet = wb.getSheetAt(0);

                // Find column indices dynamically
                int bookIdColumnIndex = -1;
                int quantityColumnIndex = -1;
                int importPriceColumnIndex = -1;
                Row headerRow = sheet.getRow(0);
                for (Cell cell : headerRow) {
                    String columnHeader = cell.getStringCellValue().trim();
                    if (columnHeader.equalsIgnoreCase("bookid")) {
                        bookIdColumnIndex = cell.getColumnIndex();
                    } else if (columnHeader.equalsIgnoreCase("quantity")) {
                        quantityColumnIndex = cell.getColumnIndex();
                    } else if (columnHeader.equalsIgnoreCase("import_price")) {
                        importPriceColumnIndex = cell.getColumnIndex();
                    }
                }

                // Create a DefaultTableModel to hold the data
                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("Book ID");
                model.addColumn("Quantity");
                model.addColumn("Import Price");
                model.addColumn("Total Price");

                // Iterate through rows and retrieve data from required columns
                for (int i = 1; i <= sheet.getLastRowNum(); i++) {
                    Row row = sheet.getRow(i);

                    // If column not found, set corresponding value as null
                    String bookId = null;
                    int quantity = 0;
                    double importPrice = 0.0;

                    if (bookIdColumnIndex != -1) {
                        Cell bookIdCell = row.getCell(bookIdColumnIndex);
                        if (bookIdCell != null) {
                            bookId = bookIdCell.getStringCellValue();
                        }
                    }

                    if (quantityColumnIndex != -1) {
                        Cell quantityCell = row.getCell(quantityColumnIndex);
                        if (quantityCell != null) {
                            quantity = (int) quantityCell.getNumericCellValue();
                        }
                    }

                    if (importPriceColumnIndex != -1) {
                        Cell importPriceCell = row.getCell(importPriceColumnIndex);
                        if (importPriceCell != null) {
                            importPrice = importPriceCell.getNumericCellValue();
                        }
                    }

                    // Calculate total price
                    double totalPrice = quantity * importPrice;

                    // Add data to the model
                    model.addRow(new Object[] { bookId, quantity, importPrice, totalPrice });
                }

                // Set the model to the jTable1
                jTable1.setModel(model);
            } catch (IOException e) {
                // Handle file IO exceptions
                e.printStackTrace();
            } finally {
                // Enable the jTable1 back after importing
                jTable1.setEnabled(true);
            }
        } else {
            // Enable the jTable1 back if the user cancels file selection
            jTable1.setEnabled(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveButton1;
    private javax.swing.JButton saveButton2;
    private javax.swing.JButton saveButton3;
    private javax.swing.JButton saveButton4;
    // End of variables declaration//GEN-END:variables
}
